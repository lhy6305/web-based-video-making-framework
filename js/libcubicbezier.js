!function(){function A(aA1,aA2){return 1-3*aA2+3*aA1}function B(aA1,aA2){return 3*aA2-6*aA1}function calcBezier(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+3*aA1)*aT}function getSlope(aT,aA1,aA2){return 3*A(aA1,aA2)*aT*aT+2*B(aA1,aA2)*aT+3*aA1}function LinearEasing(x){return x}var float32ArraySupported;float32ArraySupported="function"==typeof Float32Array,window.bezier=function(mX1,mY1,mX2,mY2){if(!(0<=mX1&&mX1<=1&&0<=mX2&&mX2<=1))throw new Error("bezier x value must be in [0, 1] range");if(mX1===mY1&&mX2===mY2)return LinearEasing;for(var sampleValues=new(float32ArraySupported?Float32Array:Array)(11),i=0;i<11;++i)sampleValues[i]=calcBezier(.1*i,mX1,mX2);return function(x){return 0===x||1===x?x:calcBezier(function(aX){for(var intervalStart=0,currentSample=1;10!==currentSample&&sampleValues[currentSample]<=aX;++currentSample)intervalStart+=.1;var guessForT=intervalStart+(aX-sampleValues[--currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample])*.1,initialSlope=getSlope(guessForT,mX1,mX2);return.001<=initialSlope?function(aX,aGuessT,mX1,mX2){for(var i=0;i<4;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(0===currentSlope)return aGuessT;aGuessT-=(calcBezier(aGuessT,mX1,mX2)-aX)/currentSlope}return aGuessT}(aX,guessForT,mX1,mX2):0===initialSlope?guessForT:function(aX,aA,aB,mX1,mX2){for(var currentX,currentT,i=0;0<(currentX=calcBezier(currentT=aA+(aB-aA)/2,mX1,mX2)-aX)?aB=currentT:aA=currentT,1e-7<Math.abs(currentX)&&++i<10;);return currentT}(aX,intervalStart,intervalStart+.1,mX1,mX2)}(x),mY1,mY2)}}}();